// Code generated by protoc-gen-go.
// source: osm.proto
// DO NOT EDIT!

/*
Package osmpb is a generated protocol buffer package.

It is generated from these files:
	osm.proto

It has these top-level messages:
	Changeset
	Change
	Bounds
	OSM
	Node
	Info
	DenseNodes
	DenseInfo
	Way
	Relation
*/
package osmpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Relation_MemberType int32

const (
	Relation_NODE     Relation_MemberType = 0
	Relation_WAY      Relation_MemberType = 1
	Relation_RELATION Relation_MemberType = 2
)

var Relation_MemberType_name = map[int32]string{
	0: "NODE",
	1: "WAY",
	2: "RELATION",
}
var Relation_MemberType_value = map[string]int32{
	"NODE":     0,
	"WAY":      1,
	"RELATION": 2,
}

func (x Relation_MemberType) Enum() *Relation_MemberType {
	p := new(Relation_MemberType)
	*p = x
	return p
}
func (x Relation_MemberType) String() string {
	return proto.EnumName(Relation_MemberType_name, int32(x))
}
func (x *Relation_MemberType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Relation_MemberType_value, data, "Relation_MemberType")
	if err != nil {
		return err
	}
	*x = Relation_MemberType(value)
	return nil
}

type Changeset struct {
	Id *int64 `protobuf:"zigzag64,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	// contains the tag strings for everything in this changeset.
	Strings          []string `protobuf:"bytes,4,rep,name=strings" json:"strings,omitempty"`
	Uid              *int64   `protobuf:"zigzag64,5,opt,name=uid" json:"uid,omitempty"`
	User             *uint32  `protobuf:"varint,6,opt,name=user" json:"user,omitempty"`
	CreatedAt        *int64   `protobuf:"zigzag64,7,opt,name=created_at" json:"created_at,omitempty"`
	ClosedAt         *int64   `protobuf:"zigzag64,8,req,name=closed_at" json:"closed_at,omitempty"`
	Bounds           *Bounds  `protobuf:"bytes,9,opt,name=bounds" json:"bounds,omitempty"`
	Change           *Change  `protobuf:"bytes,10,req,name=change" json:"change,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Changeset) Reset()         { *m = Changeset{} }
func (m *Changeset) String() string { return proto.CompactTextString(m) }
func (*Changeset) ProtoMessage()    {}

func (m *Changeset) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Changeset) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Changeset) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Changeset) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

func (m *Changeset) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Changeset) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *Changeset) GetCreatedAt() int64 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *Changeset) GetClosedAt() int64 {
	if m != nil && m.ClosedAt != nil {
		return *m.ClosedAt
	}
	return 0
}

func (m *Changeset) GetBounds() *Bounds {
	if m != nil {
		return m.Bounds
	}
	return nil
}

func (m *Changeset) GetChange() *Change {
	if m != nil {
		return m.Change
	}
	return nil
}

type Change struct {
	Bounds           *Bounds `protobuf:"bytes,1,opt,name=bounds" json:"bounds,omitempty"`
	Creates          []*OSM  `protobuf:"bytes,2,rep,name=creates" json:"creates,omitempty"`
	Modifies         []*OSM  `protobuf:"bytes,3,rep,name=modifies" json:"modifies,omitempty"`
	Deletes          []*OSM  `protobuf:"bytes,4,rep,name=deletes" json:"deletes,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Change) Reset()         { *m = Change{} }
func (m *Change) String() string { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()    {}

func (m *Change) GetBounds() *Bounds {
	if m != nil {
		return m.Bounds
	}
	return nil
}

func (m *Change) GetCreates() []*OSM {
	if m != nil {
		return m.Creates
	}
	return nil
}

func (m *Change) GetModifies() []*OSM {
	if m != nil {
		return m.Modifies
	}
	return nil
}

func (m *Change) GetDeletes() []*OSM {
	if m != nil {
		return m.Deletes
	}
	return nil
}

type Bounds struct {
	MinLng           *int64 `protobuf:"zigzag64,1,req,name=min_lng" json:"min_lng,omitempty"`
	MaxLng           *int64 `protobuf:"zigzag64,2,req,name=max_lng" json:"max_lng,omitempty"`
	MinLat           *int64 `protobuf:"zigzag64,3,req,name=min_lat" json:"min_lat,omitempty"`
	MaxLat           *int64 `protobuf:"zigzag64,4,req,name=max_lat" json:"max_lat,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Bounds) Reset()         { *m = Bounds{} }
func (m *Bounds) String() string { return proto.CompactTextString(m) }
func (*Bounds) ProtoMessage()    {}

func (m *Bounds) GetMinLng() int64 {
	if m != nil && m.MinLng != nil {
		return *m.MinLng
	}
	return 0
}

func (m *Bounds) GetMaxLng() int64 {
	if m != nil && m.MaxLng != nil {
		return *m.MaxLng
	}
	return 0
}

func (m *Bounds) GetMinLat() int64 {
	if m != nil && m.MinLat != nil {
		return *m.MinLat
	}
	return 0
}

func (m *Bounds) GetMaxLat() int64 {
	if m != nil && m.MaxLat != nil {
		return *m.MaxLat
	}
	return 0
}

type OSM struct {
	Nodes            []*Node     `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Dense            *DenseNodes `protobuf:"bytes,2,opt,name=dense" json:"dense,omitempty"`
	Ways             []*Way      `protobuf:"bytes,3,rep,name=ways" json:"ways,omitempty"`
	Relations        []*Relation `protobuf:"bytes,4,rep,name=relations" json:"relations,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *OSM) Reset()         { *m = OSM{} }
func (m *OSM) String() string { return proto.CompactTextString(m) }
func (*OSM) ProtoMessage()    {}

func (m *OSM) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *OSM) GetDense() *DenseNodes {
	if m != nil {
		return m.Dense
	}
	return nil
}

func (m *OSM) GetWays() []*Way {
	if m != nil {
		return m.Ways
	}
	return nil
}

func (m *OSM) GetRelations() []*Relation {
	if m != nil {
		return m.Relations
	}
	return nil
}

type Node struct {
	Id *int64 `protobuf:"zigzag64,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys             []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals             []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	Info             *Info    `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Lat              *int64   `protobuf:"zigzag64,8,req,name=lat" json:"lat,omitempty"`
	Lng              *int64   `protobuf:"zigzag64,9,req,name=lng" json:"lng,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}

func (m *Node) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Node) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Node) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Node) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Node) GetLat() int64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

func (m *Node) GetLng() int64 {
	if m != nil && m.Lng != nil {
		return *m.Lng
	}
	return 0
}

type Info struct {
	Version   *int64 `protobuf:"zigzag64,1,opt,name=version,def=-1" json:"version,omitempty"`
	Timestamp *int64 `protobuf:"zigzag64,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// these will be omitted if the object represents one changeset
	// and these will be all the same.
	Changeset *int64  `protobuf:"zigzag64,3,opt,name=changeset" json:"changeset,omitempty"`
	Uid       *int64  `protobuf:"zigzag64,4,opt,name=uid" json:"uid,omitempty"`
	User      *uint32 `protobuf:"varint,5,opt,name=user" json:"user,omitempty"`
	// The visible flag is used to store history information. It indicates that
	// the current object version has been created by a delete operation on the
	// OSM API. This info may be omitted if it can be inferred from it's group
	// ie. create, modify, delete.
	Visible          *bool  `protobuf:"varint,6,opt,name=visible" json:"visible,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}

const Default_Info_Version int64 = -1

func (m *Info) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_Info_Version
}

func (m *Info) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Info) GetChangeset() int64 {
	if m != nil && m.Changeset != nil {
		return *m.Changeset
	}
	return 0
}

func (m *Info) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Info) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *Info) GetVisible() bool {
	if m != nil && m.Visible != nil {
		return *m.Visible
	}
	return false
}

type DenseNodes struct {
	Id        []int64    `protobuf:"zigzag64,1,rep,packed,name=id" json:"id,omitempty"`
	DenseInfo *DenseInfo `protobuf:"bytes,5,opt,name=dense_info" json:"dense_info,omitempty"`
	Lat       []int64    `protobuf:"zigzag64,8,rep,packed,name=lat" json:"lat,omitempty"`
	Lon       []int64    `protobuf:"zigzag64,9,rep,packed,name=lon" json:"lon,omitempty"`
	// Special packing of keys and vals into one array. We use a single stringid
	// of 0 to delimit when the tags of a node ends and the tags of the next node
	// begin. The storage pattern is: ((<keyid> <valid>)* '0' )* As an exception,
	// if no node in the current block has any key/value pairs, this array does
	// not contain any delimiters, but is simply empty.
	KeysVals         []uint32 `protobuf:"varint,10,rep,packed,name=keys_vals" json:"keys_vals,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DenseNodes) Reset()         { *m = DenseNodes{} }
func (m *DenseNodes) String() string { return proto.CompactTextString(m) }
func (*DenseNodes) ProtoMessage()    {}

func (m *DenseNodes) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DenseNodes) GetDenseInfo() *DenseInfo {
	if m != nil {
		return m.DenseInfo
	}
	return nil
}

func (m *DenseNodes) GetLat() []int64 {
	if m != nil {
		return m.Lat
	}
	return nil
}

func (m *DenseNodes) GetLon() []int64 {
	if m != nil {
		return m.Lon
	}
	return nil
}

func (m *DenseNodes) GetKeysVals() []uint32 {
	if m != nil {
		return m.KeysVals
	}
	return nil
}

type DenseInfo struct {
	Versions   []int64 `protobuf:"zigzag64,1,rep,packed,name=versions" json:"versions,omitempty"`
	Timestamps []int64 `protobuf:"zigzag64,2,rep,packed,name=timestamps" json:"timestamps,omitempty"`
	// these will be omitted if the object represents one changeset
	// and these will be all the same.
	Changesets []int64 `protobuf:"zigzag64,3,rep,packed,name=changesets" json:"changesets,omitempty"`
	Uids       []int64 `protobuf:"zigzag64,4,rep,packed,name=uids" json:"uids,omitempty"`
	Users      []int32 `protobuf:"zigzag32,5,rep,packed,name=users" json:"users,omitempty"`
	// The visible flag is used to store history information. It indicates that
	// the current object version has been created by a delete operation on the
	// OSM API. This info may be omitted if it can be inferred from it's group
	// ie. create, modify, delete.
	Visibles         []bool `protobuf:"varint,6,rep,packed,name=visibles" json:"visibles,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DenseInfo) Reset()         { *m = DenseInfo{} }
func (m *DenseInfo) String() string { return proto.CompactTextString(m) }
func (*DenseInfo) ProtoMessage()    {}

func (m *DenseInfo) GetVersions() []int64 {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *DenseInfo) GetTimestamps() []int64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *DenseInfo) GetChangesets() []int64 {
	if m != nil {
		return m.Changesets
	}
	return nil
}

func (m *DenseInfo) GetUids() []int64 {
	if m != nil {
		return m.Uids
	}
	return nil
}

func (m *DenseInfo) GetUsers() []int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *DenseInfo) GetVisibles() []bool {
	if m != nil {
		return m.Visibles
	}
	return nil
}

type Way struct {
	Id *int64 `protobuf:"zigzag64,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys             []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals             []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	Info             *Info    `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Refs             []int64  `protobuf:"zigzag64,8,rep,packed,name=refs" json:"refs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Way) Reset()         { *m = Way{} }
func (m *Way) String() string { return proto.CompactTextString(m) }
func (*Way) ProtoMessage()    {}

func (m *Way) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Way) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Way) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Way) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Way) GetRefs() []int64 {
	if m != nil {
		return m.Refs
	}
	return nil
}

type Relation struct {
	Id *int64 `protobuf:"zigzag64,1,req,name=id" json:"id,omitempty"`
	// Parallel arrays.
	Keys []uint32 `protobuf:"varint,2,rep,packed,name=keys" json:"keys,omitempty"`
	Vals []uint32 `protobuf:"varint,3,rep,packed,name=vals" json:"vals,omitempty"`
	Info *Info    `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	// Parallel arrays
	Roles            []uint32              `protobuf:"varint,8,rep,packed,name=roles" json:"roles,omitempty"`
	Refs             []int64               `protobuf:"zigzag64,9,rep,packed,name=refs" json:"refs,omitempty"`
	Types            []Relation_MemberType `protobuf:"varint,10,rep,packed,name=types,enum=osm.Relation_MemberType" json:"types,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Relation) Reset()         { *m = Relation{} }
func (m *Relation) String() string { return proto.CompactTextString(m) }
func (*Relation) ProtoMessage()    {}

func (m *Relation) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Relation) GetKeys() []uint32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Relation) GetVals() []uint32 {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Relation) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Relation) GetRoles() []uint32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Relation) GetRefs() []int64 {
	if m != nil {
		return m.Refs
	}
	return nil
}

func (m *Relation) GetTypes() []Relation_MemberType {
	if m != nil {
		return m.Types
	}
	return nil
}

func init() {
	proto.RegisterEnum("osm.Relation_MemberType", Relation_MemberType_name, Relation_MemberType_value)
}
